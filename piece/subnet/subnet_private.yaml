AWSTemplateFormatVersion: 2010-09-09
Parameters:
  CidrBlock:
    Type: String
    Description: "x.x.x.x/x"
  AvailablityZone:
    Type: String
    Description: "!Select [0, !GetAZs '']"
  VpcResourceId:
    Type: String
  NatGateway:
    Type: String
Resources:
  Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Ref AvailablityZone
      CidrBlock: !Ref CidrBlock
      MapPublicIpOnLaunch: false
      VpcId: !Ref VpcResourceId
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}'
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VpcResourceId
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}'
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
  RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable
  NetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VpcResourceId
      Tags:
      - Key: Name
        Value: !Sub '${AWS::StackName}'
  NetworkAclEntryIn:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: false
      CidrBlock: '0.0.0.0/0'
  NetworkAclEntryOut:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 99
      Protocol: -1
      RuleAction: allow
      Egress: true
      CidrBlock: '0.0.0.0/0'
Outputs:
  OutputSubnet:
    Value: !Ref Subnet
    Export:
      Name: !Sub '${AWS::StackName}:Subnet'
  OutputAvailablityZone:
    Value: !Ref AvailablityZone
    Export:
      Name: !Sub '${AWS::StackName}:AvailabilityZone'
